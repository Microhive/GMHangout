@using WebApplication7.Shared
@using System.Linq;
@page "/pcs"
@inject HttpClient Http

<h1>Player Characters</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (pcs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card-deck">
        @foreach (var pc in pcs)
        {
            <div class="card mb-4">
                <img class="card-img-top" src="../@pc.ImageUrl" alt="Card image cap" style="@(pc.Status == Status.Dead ? "filter: grayscale(100%);" : "")">
                <div class="card-body">
                    <h5 class="card-title">@pc.Name (@pc.Player) <span class="badge badge-secondary">@pc.Level</span></h5>
                    <p class="card-text"><span class="badge badge-primary">@pc.Race (@pc.Class)</span></p>
                    <p class="card-text">@pc.Description</p>
                    <p class="card-text">@pc.Status</p>
                </div>
                <div class="card-footer">
                    <small class="text-muted">Last updated 3 mins ago</small>
                </div>
            </div>
            <div class="w-100 d-none d-md-block d-lg-none"><!-- wrap every 3 on md--></div>
            <div class="w-100 d-none d- d-lg-none"><!-- wrap every 3 on md--></div>
        }
    </div>


    @*<BlazorTable IsStriped="true" IsHovarable="true">
            <thead>
                <tr>
                    <th>Level</th>
                    <th>Name (Player)</th>
                    <th>Race (Class)</th>
                    <th>Status</th>
                    <td></td>
                </tr>
            </thead>
            <tbody>
                @foreach (var pc in pcs)
                {
                    <tr>
                        <td>@pc.Level</td>
                        <td>@pc.Name (@pc.Player)</td>
                        <td>@pc.Race (@pc.Class)</td>
                        <td>@pc.Status</td>
                        <td></td>
                    </tr>
                }
            </tbody>
        </BlazorTable>*@
}

@functions {

    enum View
    {
        List,
        Cards
    }

    PC[] pcs;

    protected override async Task OnInitAsync()
    {
        var rnd = new Random();
        var results = await Http.GetJsonAsync<PC[]>("/api/SampleData/PCs");
        pcs = results.OrderBy(x => rnd.Next()).Take(4).ToArray();
    }
}
